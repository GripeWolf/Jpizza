import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

public class Productos extends javax.swing.JPanel {
    Connection con = null;
    Conexiones.Conexion conect = new Conexiones.Conexion();
    
    /**
     * Creates new form Productos
     */
    public Productos() {
        initComponents();
        con = conect.getConnection(); // Establecer la conexión al iniciar el panel
        if (con != null) {
        } else {
            JOptionPane.showMessageDialog(null, "No se pudo establecer la conexión.");
        }
        mostrarProductos(); // Mostrar productos al iniciar el panel
        
        // Agregar listener de selección a la tabla
        Tabla_Producto.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
                // Si hay una fila seleccionada en la tabla
                if (Tabla_Producto.getSelectedRow() != -1) {
                    // Obtener los datos de la fila seleccionada
                    String producto = Tabla_Producto.getValueAt(Tabla_Producto.getSelectedRow(), 0).toString();
                    String tipo = Tabla_Producto.getValueAt(Tabla_Producto.getSelectedRow(), 1).toString();
                    String precio = Tabla_Producto.getValueAt(Tabla_Producto.getSelectedRow(), 2).toString();
                    
                    // Obtener los ingredientes del producto
                    String ingredientes = obtenerIngredientes(producto);

                    // Mostrar los datos en los campos de texto
                    Producto.setText(producto);
                    TipoDeProducto.setSelectedItem(tipo);
                    Precio.setText(precio);
                    Lista_Ingredientes.setText(ingredientes);
                }
            }
        });
    }
    
    // Método para conectar a la base de datos de Access
    private void mostrarProductos() {
        try {
            String sql = "SELECT Producto, Tipo, Precio FROM Productos";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            
            DefaultTableModel model = (DefaultTableModel) Tabla_Producto.getModel();
            model.setRowCount(0);
            
            while (rs.next()) {
                String producto = rs.getString("Producto");
                String tipo = rs.getString("Tipo");
                double precio = rs.getDouble("Precio");
                model.addRow(new Object[]{producto, tipo, precio});
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar productos: " + e.getMessage());
        }
    }
    
    // Método para obtener los ingredientes de un producto
    private String obtenerIngredientes(String producto) {
        String ingredientes = "";
        try {
            String sql = "SELECT Ingredientes FROM Productos WHERE Producto = ?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, producto);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                ingredientes = rs.getString("Ingredientes");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al obtener los ingredientes: " + e.getMessage());
        }
        return ingredientes;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_Producto = new javax.swing.JTable();
        Producto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        TipoDeProducto = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        Precio = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        BtnAgregar = new javax.swing.JButton();
        BtnEliminar = new javax.swing.JButton();
        BtnEditar = new javax.swing.JButton();
        ingredientes = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Lista_Ingredientes = new javax.swing.JTextArea();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        Tabla_Producto.setAutoCreateRowSorter(true);
        Tabla_Producto.setBackground(new java.awt.Color(51, 51, 51));
        Tabla_Producto.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        Tabla_Producto.setForeground(new java.awt.Color(255, 255, 255));
        Tabla_Producto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Producto", "Tipo", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla_Producto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Tabla_Producto.setDropMode(javax.swing.DropMode.INSERT_COLS);
        Tabla_Producto.setFocusable(false);
        Tabla_Producto.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(Tabla_Producto);

        Producto.setBackground(new java.awt.Color(0, 0, 0));
        Producto.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        Producto.setForeground(new java.awt.Color(255, 255, 255));
        Producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductoActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("NOMBRE DEL PRODUCTO :");

        TipoDeProducto.setBackground(new java.awt.Color(0, 0, 0));
        TipoDeProducto.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        TipoDeProducto.setForeground(new java.awt.Color(255, 255, 255));
        TipoDeProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pizzas", "Bebidas" }));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("TIPO DE PRODUCTO :");

        Precio.setBackground(new java.awt.Color(0, 0, 0));
        Precio.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        Precio.setForeground(new java.awt.Color(255, 255, 255));
        Precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrecioActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("PRECIO :");

        BtnAgregar.setBackground(new java.awt.Color(102, 102, 102));
        BtnAgregar.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        BtnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        BtnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Agregar.png"))); // NOI18N
        BtnAgregar.setText("AGREGAR");
        BtnAgregar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BtnAgregar.setIconTextGap(10);
        BtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAgregarActionPerformed(evt);
            }
        });

        BtnEliminar.setBackground(new java.awt.Color(102, 102, 102));
        BtnEliminar.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        BtnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        BtnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Eliminar.png"))); // NOI18N
        BtnEliminar.setText("ELIMINAR");
        BtnEliminar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BtnEliminar.setIconTextGap(10);
        BtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarActionPerformed(evt);
            }
        });

        BtnEditar.setBackground(new java.awt.Color(102, 102, 102));
        BtnEditar.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        BtnEditar.setForeground(new java.awt.Color(255, 255, 255));
        BtnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/editar-codigo.png"))); // NOI18N
        BtnEditar.setText("EDITAR");
        BtnEditar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BtnEditar.setIconTextGap(10);
        BtnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditarActionPerformed(evt);
            }
        });

        ingredientes.setBackground(new java.awt.Color(0, 0, 0));
        ingredientes.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        ingredientes.setForeground(new java.awt.Color(0, 0, 0));
        ingredientes.setText("INGREDIENTES :");
        ingredientes.setToolTipText("");

        Lista_Ingredientes.setBackground(new java.awt.Color(0, 0, 0));
        Lista_Ingredientes.setColumns(20);
        Lista_Ingredientes.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        Lista_Ingredientes.setForeground(new java.awt.Color(255, 255, 255));
        Lista_Ingredientes.setRows(5);
        jScrollPane3.setViewportView(Lista_Ingredientes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Producto, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TipoDeProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(Precio, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BtnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BtnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BtnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ingredientes)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(ingredientes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TipoDeProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnAgregar)
                            .addComponent(BtnEliminar)
                            .addComponent(BtnEditar))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductoActionPerformed

    private void PrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrecioActionPerformed

    private void BtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAgregarActionPerformed
    con = conect.getConnection(); // Establecer la conexión
    if (con != null) {
        String producto = Producto.getText();
        String tipoProducto = (String) TipoDeProducto.getSelectedItem();
        double precio = Double.parseDouble(Precio.getText());
        String ingredientes = Lista_Ingredientes.getText(); // Obtener los ingredientes del JTextArea

        try {
            String sql = "INSERT INTO Productos (Producto, Tipo, Precio, Ingredientes) VALUES (?, ?, ?, ?)";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, producto);
            pst.setString(2, tipoProducto);
            pst.setDouble(3, precio);
            pst.setString(4, ingredientes); // Agregar los ingredientes a la consulta
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Producto agregado correctamente.");
            
            // Actualizar la tabla después de agregar el producto
            mostrarProductos();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al agregar el producto: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(null, "No se pudo establecer la conexión.");
    }
    }//GEN-LAST:event_BtnAgregarActionPerformed

    private void BtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarActionPerformed
    // Obtener el nombre del producto seleccionado en la tabla
    int filaSeleccionada = Tabla_Producto.getSelectedRow();
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(null, "Por favor, seleccione un producto para eliminar.");
        return;
    }
    String producto = Tabla_Producto.getValueAt(filaSeleccionada, 0).toString();

    try {
        // Crear la consulta SQL para eliminar el producto seleccionado
        String sql = "DELETE FROM Productos WHERE Producto = ?";
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, producto);

        // Ejecutar la consulta
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Producto eliminado correctamente.");
        
        // Actualizar la tabla después de eliminar el producto
        mostrarProductos();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al eliminar el producto: " + e.getMessage());
    }
    }//GEN-LAST:event_BtnEliminarActionPerformed

    private void BtnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditarActionPerformed
// Obtener el nombre del producto seleccionado en la tabla
    int filaSeleccionada = Tabla_Producto.getSelectedRow();
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(null, "Por favor, seleccione un producto para editar.");
        return;
    }
    String productoAnterior = Tabla_Producto.getValueAt(filaSeleccionada, 0).toString();
    
    // Obtener los nuevos datos ingresados por el usuario
    String nuevoProducto = Producto.getText();
    String nuevoTipoProducto = (String) TipoDeProducto.getSelectedItem();
    double nuevoPrecio;
    try {
        nuevoPrecio = Double.parseDouble(Precio.getText());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Ingrese un valor válido para el precio.");
        return;
    }
    String nuevosIngredientes = Lista_Ingredientes.getText(); // Obtener los nuevos ingredientes del JTextArea

    try {
        // Crear la consulta SQL para actualizar el producto seleccionado
        String sql = "UPDATE Productos SET Producto = ?, Tipo = ?, Precio = ?, Ingredientes = ? WHERE Producto = ?";
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, nuevoProducto);
        pst.setString(2, nuevoTipoProducto);
        pst.setDouble(3, nuevoPrecio);
        pst.setString(4, nuevosIngredientes); // Agregar los nuevos ingredientes a la consulta
        pst.setString(5, productoAnterior);

        // Ejecutar la consulta
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Producto editado correctamente.");

        // Actualizar la tabla después de editar el producto
        mostrarProductos();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al editar el producto: " + e.getMessage());
    }
    }//GEN-LAST:event_BtnEditarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAgregar;
    private javax.swing.JButton BtnEditar;
    private javax.swing.JButton BtnEliminar;
    private javax.swing.JTextArea Lista_Ingredientes;
    private javax.swing.JTextField Precio;
    private javax.swing.JTextField Producto;
    private javax.swing.JTable Tabla_Producto;
    private javax.swing.JComboBox<String> TipoDeProducto;
    private javax.swing.JLabel ingredientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
